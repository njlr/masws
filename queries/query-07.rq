# Find a list of developer pairs such that EITHER: 
# 1) Both developers have worked on the same game OR
# 2) They have had a shared colleague
SELECT DISTINCT ?name1 ?name2 
WHERE 
{
    {
        ?person1 <http://www.w3.org/TR/rdf-schema/#type> <http://xmlns.com/foaf/0.1/#Person> . 
        ?person1 <http://xmlns.com/foaf/0.1/#name> ?name1 .  
        ?person1 <https://raw.github.com/nlr/masws/master/vocab.n3#developer> ?game1 . 
        
        ?person2 <http://www.w3.org/TR/rdf-schema/#type> <http://xmlns.com/foaf/0.1/#Person> . 
        ?person2 <http://xmlns.com/foaf/0.1/#name> ?name2 . 
        ?person2 <https://raw.github.com/nlr/masws/master/vocab.n3#developer> ?game1 . 
        
        FILTER ( ?person1 != ?person2 ) . 
    }
    UNION
    {
        ?person1 <http://www.w3.org/TR/rdf-schema/#type> <http://xmlns.com/foaf/0.1/#Person> . 
        ?person1 <http://xmlns.com/foaf/0.1/#name> ?name1 .  
        ?person1 <https://raw.github.com/nlr/masws/master/vocab.n3#developer> ?game1 . 
        
        ?person2 <http://www.w3.org/TR/rdf-schema/#type> <http://xmlns.com/foaf/0.1/#Person> . 
        ?person2 <http://xmlns.com/foaf/0.1/#name> ?name2 . 
        ?person2 <https://raw.github.com/nlr/masws/master/vocab.n3#developer> ?game1 . 
        
        FILTER ( ?person1 != ?person2 ) . 
        
        ?person3 <http://www.w3.org/TR/rdf-schema/#type> <http://xmlns.com/foaf/0.1/#Person> . 
        
        ?person3 <https://raw.github.com/nlr/masws/master/vocab.n3#developer> ?game1 . 
        ?person3 <https://raw.github.com/nlr/masws/master/vocab.n3#developer> ?game2 . 
        
        FILTER ( ?game1 != ?game2 ) . 
        
        ?person2 <https://raw.github.com/nlr/masws/master/vocab.n3#developer> ?game2 . 
        
        FILTER ( ?person1 != ?person3 ) . 
        FILTER ( ?person2 != ?person3 ) . 
    }
}
LIMIT 3000 # Limited as this is a complex query
